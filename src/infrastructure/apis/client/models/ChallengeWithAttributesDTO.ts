/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChallengeAttributeDTO } from './ChallengeAttributeDTO';
import {
    ChallengeAttributeDTOFromJSON,
    ChallengeAttributeDTOFromJSONTyped,
    ChallengeAttributeDTOToJSON,
} from './ChallengeAttributeDTO';

/**
 * 
 * @export
 * @interface ChallengeWithAttributesDTO
 */
export interface ChallengeWithAttributesDTO {
    /**
     * 
     * @type {string}
     * @memberof ChallengeWithAttributesDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeWithAttributesDTO
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ChallengeWithAttributesDTO
     */
    description?: string | null;
    /**
     * 
     * @type {Array<ChallengeAttributeDTO>}
     * @memberof ChallengeWithAttributesDTO
     */
    challengeAttributes?: Array<ChallengeAttributeDTO> | null;
}

/**
 * Check if a given object implements the ChallengeWithAttributesDTO interface.
 */
export function instanceOfChallengeWithAttributesDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChallengeWithAttributesDTOFromJSON(json: any): ChallengeWithAttributesDTO {
    return ChallengeWithAttributesDTOFromJSONTyped(json, false);
}

export function ChallengeWithAttributesDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChallengeWithAttributesDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'challengeAttributes': !exists(json, 'challengeAttributes') ? undefined : (json['challengeAttributes'] === null ? null : (json['challengeAttributes'] as Array<any>).map(ChallengeAttributeDTOFromJSON)),
    };
}

export function ChallengeWithAttributesDTOToJSON(value?: ChallengeWithAttributesDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'description': value.description,
        'challengeAttributes': value.challengeAttributes === undefined ? undefined : (value.challengeAttributes === null ? null : (value.challengeAttributes as Array<any>).map(ChallengeAttributeDTOToJSON)),
    };
}

